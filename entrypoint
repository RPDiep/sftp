#!/bin/bash
set -e

[[ -n "${debug}" ]] && set -x

function exitwitherror() {
    echo "$1" >&2
    exit 1
}

# Preflight checks
[[ -z "$user" ]] && exitwitherror "Environment variable 'user' is not set"
[[ "$pwhash:${auth_keys}" == ":" ]] && exitwitherror "Environment variables 'pwhash' and 'auth_keys' are not set. Set either one"
[[ -z "$uid" ]] && exitwitherror "Environment variable 'uid' is not set"
[[ "$uid" -eq 0 ]] && exitwitherror "Environment variable 'uid' may not be 0"

# Add the user
getent passwd ${user} 2>/dev/null || {
    useradd -m -d /home/sftp --no-user-group --non-unique --uid ${uid} ${user}
    chown root:root /home/sftp
    chmod 755 /home/sftp
    
    # Add ssh keys if specified
    [[ -n "${auth_keys}" ]] && {
        mkdir /home/sftp/.ssh
        base64 -d <<< ${auth_keys} > /home/sftp/.ssh/authorized_keys
        chmod -R go -rwx /home/sftp/.ssh
    }
    
    # Set password if specified
    [[ -n "${pwhash}" ]] && {
        chpasswd -e <<< "${user}:${pwhash}"
    } || {
        usermod -p "*" $user # disabled password
    }
}

# Generate unique ssh keys for this container, if needed
[[ ! -f /etc/ssh/ssh_host_ed25519_key ]] && ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ''
[[ ! -f /etc/ssh/ssh_host_rsa_key ]] && ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_rsa_key -N ''

exec /usr/sbin/sshd -D -e
